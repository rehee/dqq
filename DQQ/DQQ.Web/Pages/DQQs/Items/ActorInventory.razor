@using DQQ.Entities
@using DQQ.Profiles.Items.Equipments
@using DQQ.Helper
@using DQQ.Web.Pages.DQQs.Items.Components
@using DQQ.Web.Pages.DQQs.CombatProperties
@inherits ActorInventoryPage
<h3>背包 <button type="button" class="btn btn-primary" @onclick="@OpenDrawer">查看属性</button></h3>
<Layout ShowFooter="true">
	<Header>
		<div>
			<EquipInSlot Equips="SelectedCharacter?.EquipItems" OnDismiss="()=>UnEquipSlog(EnumEquipSlot.Head)" Slots="EnumEquipSlot.Head" />
			<EquipInSlot Equips="SelectedCharacter?.EquipItems" OnDismiss="()=>UnEquipSlog(EnumEquipSlot.Body)" Slots="EnumEquipSlot.Body" />
			<EquipInSlot Equips="SelectedCharacter?.EquipItems" OnDismiss="()=>UnEquipSlog(EnumEquipSlot.Gloves)" Slots="EnumEquipSlot.Gloves" />
			<EquipInSlot Equips="SelectedCharacter?.EquipItems" OnDismiss="()=>UnEquipSlog(EnumEquipSlot.Boots)" Slots="EnumEquipSlot.Boots" />
			<EquipInSlot Equips="SelectedCharacter?.EquipItems" OnDismiss="()=>UnEquipSlog(EnumEquipSlot.MainHand)" Slots="EnumEquipSlot.MainHand" />
			<EquipInSlot Equips="SelectedCharacter?.EquipItems" OnDismiss="()=>UnEquipSlog(EnumEquipSlot.OffHand)" Slots="EnumEquipSlot.OffHand" />
			<EquipInSlot Equips="SelectedCharacter?.EquipItems" OnDismiss="()=>UnEquipSlog(EnumEquipSlot.Amulet)" Slots="EnumEquipSlot.Amulet" />
			<EquipInSlot Equips="SelectedCharacter?.EquipItems" OnDismiss="()=>UnEquipSlog(EnumEquipSlot.Belt)" Slots="EnumEquipSlot.Belt" />
			<EquipInSlot Equips="SelectedCharacter?.EquipItems" OnDismiss="()=>UnEquipSlog(EnumEquipSlot.LeftRing)" Slots="EnumEquipSlot.LeftRing" />
			<EquipInSlot Equips="SelectedCharacter?.EquipItems" OnDismiss="()=>UnEquipSlog(EnumEquipSlot.RightRing)" Slots="EnumEquipSlot.RightRing" />
		</div>
		<div>

			<Drawer Placement="Placement.Left" @bind-IsOpen="@IsBackdropOpen" IsBackdrop="true">
				<CombatPropertySummary CombatProperty="SelectedCharacter?.CombatPanel?.StaticPanel" />
			</Drawer>
		</div>
	</Header>

	<Main>
		<div style="overflow:hidden;height: calc(100vh - 350px);">
			@if (Items != null)
			{
			
				<Table TItem="ItemEntity" IsAutoRefresh="true" AutoRefreshInterval="501" @bind-SelectedRows="SelectedItems" ShowToolbar="true" ShowRefresh="false" ShowDefaultButtons="false" IsPagination="true" OnQueryAsync="OnQueryAsync" PageItemsSource="PageItemsSource" IsMultipleSelect="true" IsFixedHeader="true" ShowTopPagination="true">
					<TableToolbarTemplate>
						<BootstrapInputGroup>
							<Button Color="Color.Success" Text="全选" OnClick="()=>SelectAll()"></Button>
							@* <Button Color="Color.Warning" Text="拾取" OnClick="()=>PickSelected()"></Button> *@
							<BootstrapInputGroupLabel DisplayText="选择稀有度" />
							<Select Items="SelectedItemHelper.GetSelectedItem<EnumRarity>()" @bind-Value="Rarity">
							</Select>
							<BootstrapInputGroupLabel DisplayText="选择物品种类" />
							<Select Items="SelectedItemHelper.GetSelectedItem<EnumItemType>()" @bind-Value="ItemType">
							</Select>
						</BootstrapInputGroup>


					</TableToolbarTemplate>
					<TableColumns>
						<TableColumn @bind-Field="@context.Name" Text="物品" Width="180">
							<Template Context="value">
								@{
									var color = Color.Light;
									switch (value.Row.Rarity)
									{
										case EnumRarity.Magic:
											color = Color.Primary;
											break;
										case EnumRarity.Rare:
											color = Color.Warning;
											break;
									}
								}
								<Popover Placement="Placement.Right" Content="@value.Row.ComponentString" IsHtml="true">
									<Tag Color="color">
										@value.Value
									</Tag>
								</Popover>


							</Template>
						</TableColumn>
						<TableColumn @bind-Field="@context.Quantity" Text="数量" Width="180" />
						<TableColumn @bind-Field="@context.Rarity" Text="稀有度" Width="180" />
						<TableColumn @bind-Field="@context.Id" Text="操作">
							<Template Context="value">
								@{
									var equip = value.Row.Profile as EquipProfile;
									if (equip != null)
									{
										var slots = EquiptableHelper.GetAvaliableSlots(equip.EquipType);

										if (slots?.Count() > 1)
										{
											foreach (var slot in slots)
											{
												string? compareString = "";

												value.Row.CompareComponentString?.TryGetValue(slot, out compareString);
												if (String.IsNullOrEmpty(compareString))
												{
													<Popover Placement="Placement.Top" Content="@value.Row.ComponentString" IsHtml="true">
														<Button Color="Color.Success" Text="@($"装备 ({slot.GetEnumString()})")" OnClick="()=>EquipItem(value.Row?.Id,slot)" />
													</Popover>
												}
												else
												{
													<Popover Placement="Placement.Top" CustomClass="compare_popup" Content="@compareString" IsHtml="true">
														<Button Color="Color.Success" Text="@($"装备 ({slot.GetEnumString()})")" OnClick="()=>EquipItem(value.Row?.Id,slot)" />
													</Popover>
												}
												
											}
										}
										else
										{
											<Popover Placement="Placement.Top" CustomClass="compare_popup" Content="@(value.Row.CompareComponentStringAll)" IsHtml="true">
												<Button Color="Color.Success" Text="装备" OnClick="()=>EquipItem(value.Row?.Id,null)" />
											</Popover>
										}
									}
								}

								<span></span>

							</Template>
						</TableColumn>
					</TableColumns>
				</Table>
			}

		</div>
	</Main>
	<Footer>
		<div>物品数量: xxx 物品上限: yyy 剩余: (yyy-xxx)</div>
	</Footer>
</Layout>
