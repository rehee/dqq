@inherits SkillStrategyPage
<h3>技能策略</h3>
<p>技能释放的策略. 根据选择的条件来释放. 也可以选择目标条件以选择与主目标不同的目标. 玩命在做了</p>
<br />
<br />
<br />
<Button Color="Color.Primary" Text="添加策略" OnClick="Add" />
<table class="table">
  <thead>
    <tr>
      <th>优先级</th>
      <th>使用策略</th>
      <th>判断目标</th>
      <th>目标权重</th>
      <th>判断属性</th>
      <th>比较大小</th>
      <th>比较值</th>
      <th>操作</th>
    </tr>
  </thead>
  <tbody>
    @if (DTO != null && DTO.SkillStrategies != null)
    {
      foreach (var s in DTO.SkillStrategies.OrderBy(b => b.Priority))
      {
        <tr>
          <td>
            <InputNumber @bind-Value="s.Priority" />
          </td>
          <td>
            <Select Items="SelectedItemHelper.GetSelectedItem<EnumStrategyCondition>()" @bind-Value="s.Condition">
            </Select>
          </td>
          @if (s.Condition == EnumStrategyCondition.NotSpecified)
          {
            <td> </td>
            <td> </td>
            <td> </td>
            <td> </td>
            <td> </td>
          }
          @if (s.Condition == EnumStrategyCondition.Target)
          {
            <td>
              <Select Items="SelectedItemHelper.GetSelectedItem<EnumTarget>()" @bind-Value="s.CheckTarget">
              </Select>

            </td>
            <td>
              <Select Items="SelectedItemHelper.GetSelectedItem<EnumTargetPriority>()" @bind-Value="s.SkillTarget">
              </Select>
            </td>
            <td>
              <Select Items="SelectedItemHelper.GetSelectedItem<EnumPropertyCompare>()" @bind-Value="s.Property">
              </Select>

            </td>
            <td>
              <Select Items="SelectedItemHelper.GetSelectedItem<EnumCompare>()" @bind-Value="s.Compare">
              </Select>

            </td>
            <td>
              <InputNumber @bind-Value="s.Value" />

            </td>
          }
          @if (s.Condition == EnumStrategyCondition.Players || s.Condition == EnumStrategyCondition.Enemies)
          {
            <td>
              <Select Items="SelectedItemHelper.GetSelectedItem<EnumStrategyParty>()" @bind-Value="s.PartyStrategy">
              </Select>

            </td>
            <td>
              <Select Items="SelectedItemHelper.GetSelectedItem<EnumTargetPriority>()" @bind-Value="s.SkillTarget">
              </Select>
            </td>
            <td>
              @if (s.PartyStrategy == EnumStrategyParty.Contain)
              {
                <Select Items="SelectedItemHelper.GetSelectedItem<EnumPropertyCompare>()" @bind-Value="s.Property">
                </Select>
              }
            </td>
            <td>
              <Select Items="SelectedItemHelper.GetSelectedItem<EnumCompare>()" @bind-Value="s.Compare">
              </Select>

            </td>
            <td>
              <InputNumber @bind-Value="s.Value" />

            </td>
          }
          @if (s.Condition == EnumStrategyCondition.Wave || s.Condition == EnumStrategyCondition.Combat)
          {
            <td>
              <Select Items="SelectedItemHelper.GetSelectedItem<EnumStrategyWave>()" @bind-Value="s.WaveStrategy">
              </Select>

            </td>
            <td>
              <Select Items="SelectedItemHelper.GetSelectedItem<EnumTargetPriority>()" @bind-Value="s.SkillTarget">
              </Select>
            </td>
            <td>
            </td>
            <td>
            </td>
            <td>
              <InputNumber @bind-Value="s.Value" />

            </td>
          }

          <td>

            <Button Color="Color.Danger" Text="-" OnClick="()=>Remove(s)" />
          </td>
        </tr>
      }
    }


  </tbody>
</table>