@using DQQ.Profiles.Skills
@using DQQ.Web.Pages.DQQs.Builds.Components
@inherits SkillPickerPage
<style>
	.skill_index_selected {
		border: 1px solid red;
		
	}

	.position_relative{
		position: relative;
	}
	.skill_select_badge {
		position: absolute;
		right: -6%;
		top: -17%;
	}
</style>

@if (Avaliable)
{
	<div class="row g-3">
		<div class="col-6">
			<Card>
				<BodyTemplate>
					<div class="row g-3">
						<div class="col-12">
							<div>
								@if (SelectedIndex != null && PickedSkill != null)
								{
									<Button IsAsync="true" IsBlock="true" OnClick="SaveChange">更改技能</Button>
								}
							</div>
							@if (SelectedIndex != null)
							{
								<div>
									您选择了:
									@if (SelectedIndex == 0)
									{
										<span>主动技能</span>
										<DQQInfo>
											<p>
												主动技能槽位可以放置主动技能. 在冷却结束并满足策略的释放条件后就会自动选择目标释放. 无法放置辅助技能. 有些触发技能. 如受伤害后释放也可以放在此处. 详见技能描述.
											</p>
										</DQQInfo>
									}
									else
									{
										<span>辅助技能</span>
										<DQQInfo>
											<p>
												辅助技能槽位可以放置辅助技能. 辅助技能无法单独释放. 但是可以增强主动技能. 某些触发技能也可以放在辅助技栏位. 比如技能造成伤害后释放. 详见技能说明.
											</p>
										</DQQInfo>
									}
								</div>
								<SkillDetailPage Profile="ClickedSkillProfile" />
							}
						</div>

						<div class="col-12">
							@if (PickedSkill != null)
							{
								<SkillDetailPage Profile="PickedSkill" />
							}
						</div>

					</div>
					
					
					
				</BodyTemplate>
			</Card>
		

		</div>
		<div class="col-6">
			<div class="row g-3">
				<div class="col-12">
					<div class="row g-3">
						@if (SelectedDTO?.SupportSkills?.Any() == true)
						{
							@for (var i = 0; i < SelectedDTO.SupportSkills.Count() + 1; i++)
							{
								if (GetSkillSlotAvaliable(i) != true)
								{
									continue;
								}
								var i2 = i;
								var skilNumber = GetClickedSkill(i2);
								var skill = DQQPool.TryGet<SkillProfile, EnumSkillNumber>(skilNumber ?? EnumSkillNumber.NotSpecified);
								<div class="col-6 col-sm-6 col-md-6 col-lg-4">
									<Card @onclick="()=>SkillClick(i2)" class="@CardClass(i2)">
										<BodyTemplate>
											@(skill?.Name ?? "空")
											<Badge Color="@(i2==0?Color.Primary:Color.Warning)" class="skill_select_badge">
												@if (i2 == 0)
												{
													<span>主动</span>
												}
												else
												{
													<span>辅助</span>
												}

											</Badge>
										</BodyTemplate>
									</Card>
								</div>

							}
						}
					</div>
				</div>
				<div class="col-12">
					<Card>
						<BodyTemplate>
							<BootstrapInputGroup>
								@foreach (var t in BindingTypeFilters)
								{
									<Toggle Width="80" @bind-Value="t.Selected" OnText="@t.Value.GetEnumString().Substring(0,2)" OffText="@t.Value.GetEnumString().Substring(0,2)" Color="t.Value.GetColor()" />
								}
							</BootstrapInputGroup>
						</BodyTemplate>
					</Card>
					<Card>
						<BodyTemplate>
							<div class="row g-3">
								@foreach(var skill in AvaliableSkills)
								{
									<div class="col-6 col-sm-6 col-md-6 col-lg-4">
										<Card @onclick="()=> SkillPicked(skill)">
											<BodyTemplate>
												@skill.Name
											</BodyTemplate>
										</Card>
									</div>
								}
							</div>
						</BodyTemplate>
					</Card>
				</div>
			</div>
		</div>
		
	</div>
}
