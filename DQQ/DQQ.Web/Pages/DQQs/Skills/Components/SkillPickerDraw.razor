@inherits SkillPickerDrawPage
<Button Size="Size.ExtraSmall" Color="Color.Warning" Icon="fas fa-gear" OnClick="OpenDrawer">
</Button>
<Drawer Placement="Placement.Right" @bind-IsOpen="@IsOpen" IsBackdrop="true">
	<div class="d-flex justify-content-center align-items-center ">
		<Button OnClick="OpenDrawer">关闭</Button>
	</div>
	<div class="row g-3" style="max-width: 240px; margin-left: 20px;">
		@if (SelectedDTO?.Profile != null)
		{
			<div class="col-12">
				<Button IsAsync="true" OnClick="()=>SelectSkills()">修改主动技能</Button>
			</div>
			@for (var i = 0; i < Slot.MaxSkillNumber(); i++)
			{
				var i2 = i;
				var skillName = SelectedDTO?.SupportSkills?.Where((c, i3) => i3 == i2).FirstOrDefault()?.SkillName;
				var valid = false;
				switch (i2)
				{
					case 0:
						if (EnumProgress.SkillSupport1.IsUnlocked(SelectedCharacter))
						{
							valid = true;
						}
						break;
					case 1:
						if (EnumProgress.SkillSupport2.IsUnlocked(SelectedCharacter))
						{
							valid = true;
						}
						break;
					case 2:
						if (EnumProgress.SkillSupport3.IsUnlocked(SelectedCharacter))
						{
							valid = true;
						}
						break;
					case 3:
						if (EnumProgress.SkillSupport4.IsUnlocked(SelectedCharacter))
						{
							valid = true;
						}
						break;
					case 4:
						if (EnumProgress.SkillSupport5.IsUnlocked(SelectedCharacter))
						{
							valid = true;
						}
						break;

				}
				if (valid)
				{
					<div class="col-12">
						<Button OnClick="()=>SelectSkills(i2)" Color="@(String.IsNullOrEmpty(skillName)?Color.Warning:Color.Success)">@(skillName ?? "无")</Button>
					</div>
				}
				
			}
		
		}
		else
		{
			<div class="col-12">
				<Button IsAsync="true" OnClick="()=>SelectSkills()">选择主动技能</Button>
			</div>
		}

	</div>
</Drawer>


